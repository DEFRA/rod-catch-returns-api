#!/bin/bash
###############################################################################
#
#   Database control script, for use in development environment only.
#
###############################################################################

# Args, error message, exit code
function die_on() {
    MSG="${1:-Unknown error}"
    CODE="${2:-1}"
    echo ${MSG}
    print_usage
    exit ${CODE}
}

# Usage helper
function print_usage() {
    echo "Usage:"
    echo "dbctl [--quiet|-q] [init|*reset|update]"
    echo "e.g.:"
    echo "  dbctl -q reload"
}

# Parse command line arguments
NON_FLAGS=()
for i in "$@"
do
    # We haven't hit a non-flag yet, parse command line arguments to this script
    case ${i} in
        -q|--quiet)
            QUIET=" > /dev/null 2>&1"
            shift
        ;;
        -*|--*)
            die_on "Unrecognised option $i" 666
        ;;
        *)
            # Something that wasn't a flag, store for later
            NON_FLAGS+=("$1")
            shift
        ;;
    esac
done
# Restore any arguments that weren't flags
set -- "${NON_FLAGS[@]}"

# Location of this script
SCRIPT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
# Project root folder (relative to script location)
PROJECT_ROOT="$( cd "${SCRIPT_DIR}/../" ; pwd -P )"

# Action to take (default reset) - init/reset/reload - second non-flag argument
ACTION="${1:-reset}"

set -e

echo "Sourcing ${PROJECT_ROOT}/.env"
export $(cat ${PROJECT_ROOT}/.env | xargs)

case "${ACTION}" in
    "update")
        ${PROJECT_ROOT}/mvnw resources:resources liquibase:update ${QUIET}
    ;;
    "reset")
        ${PROJECT_ROOT}/mvnw resources:resources liquibase:rollback -Dliquibase.rollbackTag=empty ${QUIET}
        ${PROJECT_ROOT}/mvnw liquibase:update ${QUIET}
    ;;
    "init")
        ${PROJECT_ROOT}/mvnw resources:resources liquibase:dropAll
        ${PROJECT_ROOT}/mvnw liquibase:tag -Dliquibase.tag=empty ${QUIET}
    ;;
    *)
        die_on "Unrecognised action '${ACTION}', should be one of init, reset, update"
    ;;
esac
